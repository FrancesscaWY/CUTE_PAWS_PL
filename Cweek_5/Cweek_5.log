1>> virtual  定义虚函数，有利于实现派生类对同名函数的重定义，（多态）
    纯虚函数，初始化为零
2>> 数据封装是一种把数据和操作数据的函数捆绑在一起的机制
3>> 数据抽象是一种仅向用户暴露接口而把具体的实现细节隐藏起来的机制
4>> 类中至少有一个函数被声明为纯虚函数，则这个类就是抽象类(ABC)
    给其他类提供一个可以继承的适当的基类。抽象类不能被用于实例化对象，它只能作为接口使用
5>> ios::trunc 打开文件并清空原内容，增加新内容
    ios::app 以追加模式打开文件，只能进行写操作。如果文件不存在，则创建一个新文件
             ；如果文件已存在，则在原有内容的末尾追加新内容。与ios::trunc 同时使用会无法打开文件。
         app为保留原来文本添加，trunc为清空原来文本重启----冲突
6>> 读取空格存入字符串中，
                #include <string>
                    string text;
                    getline(cin,text);
7>> using namespace space1 :: space2_in_space1
    命名空间定义可以是定义一个新的命名空间，也可以是为已有的命名空间增加新的元素：
8>> # 运算符会把 replacement-text 令牌转换为用引号引起来的字符串
    ## 运算符用于连接两个令牌

9>> signal handle
    SIGABRT 程序的异常终止，如调用 abort
    SIGFPE 错误的算术运算，比如除以零或导致溢出的操作
    SIGILL 检测非法指令
    SIGINT 接收到交互注意信号 CTRL+C
    SIGSEGV 非法访问内存
    SIGTERM 发送到程序的终止请求

10>> multi_threads
     creating a thread:
     pthread_create(&thread(num), NULL(original parameters of func ), function, NULL（incoming parameters）);
11>> pthread_join (threadId, status)//pthread_join() 子程序阻碍调用程序，直到指定的 threadid 线程终止为止
             当创建一个线程时，它的某个属性会定义它是否是可连接的（joinable）或可分离的（detached）,默认是可连接的
     pthread_detach (threadId) //pthread_detach() 函数允许一个线程在它终止时，自行清除它的资源